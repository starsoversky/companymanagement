# Generated by Django 4.2.10 on 2024-02-23 21:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                ("year", models.IntegerField()),
                ("color", models.CharField(max_length=100)),
                ("category", models.CharField(max_length=255)),
                ("capacity", models.IntegerField(default=0)),
                ("power", models.CharField(max_length=100)),
                ("structure", models.CharField(max_length=100)),
                ("vin_code", models.CharField(max_length=100)),
                ("plate_number", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("location", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("photos", models.ImageField(upload_to="uploads/")),
                ("competition_start_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="CompanyA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=20)),
                ("address", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("registration_number", models.CharField(max_length=255, unique=True)),
                (
                    "registration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date registration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserCompany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[("A", "Company A"), ("B", "Company B")], max_length=1
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Tələb olunur. 50 simvol və ya az. Hərflər, Rəqəmlər və @/./+/-/_ simvollar.",
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[\\w.@+-]+$",
                                "Düzgün istifadəçi adı daxil edin.",
                                "yanlışdır",
                            )
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="last name"),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                ("phone_number", models.CharField(max_length=20)),
                ("address", models.CharField(max_length=100)),
                ("registration_number", models.CharField(max_length=255, unique=True)),
                (
                    "registration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date registration",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserCustomer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Tələb olunur. 50 simvol və ya az. Hərflər, Rəqəmlər və @/./+/-/_ simvollar.",
                        max_length=50,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[\\w.@+-]+$",
                                "Düzgün istifadəçi adı daxil edin.",
                                "yanlışdır",
                            )
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="last name"),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "fin_code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=100,
                        null=True,
                        verbose_name="FIN Kod",
                    ),
                ),
                ("phone_number", models.CharField(max_length=20)),
                ("address", models.CharField(max_length=100)),
                (
                    "registration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date registration",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Meeting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("A", "in progress"),
                            ("B", "finished"),
                            ("C", "scheduled"),
                        ],
                        max_length=1,
                    ),
                ),
                ("date", models.DateTimeField()),
                ("time", models.TimeField()),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.asset"
                    ),
                ),
                (
                    "competation",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meeting",
                        to="app.case",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.usercustomer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Competition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submission_date", models.DateTimeField(auto_now_add=True)),
                ("start_date", models.DateTimeField()),
                (
                    "estimated_cost",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("restoration_duration", models.DurationField()),
                ("close_date", models.DateTimeField()),
                ("winner", models.BooleanField()),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competitions",
                        to="app.case",
                    ),
                ),
                (
                    "company_b",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competition",
                        to="app.usercompany",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_plan", models.CharField(max_length=100)),
                ("service_type", models.CharField(max_length=100)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "company_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comp_doc",
                        to="app.companya",
                    ),
                ),
                (
                    "company_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_user",
                        to="app.usercompany",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comp_doc",
                        to="app.usercustomer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyB",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=20)),
                ("address", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                (
                    "registration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date registration",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="company_b",
                        to="app.usercompany",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="companya",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="company_a",
                to="app.usercompany",
            ),
        ),
        migrations.AddField(
            model_name="case",
            name="company_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="case_user",
                to="app.usercompany",
            ),
        ),
        migrations.AddField(
            model_name="case",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reported_cases",
                to="app.usercustomer",
            ),
        ),
        migrations.AddField(
            model_name="case",
            name="document",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="case_document",
                to="app.companydocument",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cust_asset",
                to="app.usercustomer",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="service_document",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="serv_doc",
                to="app.companydocument",
            ),
        ),
    ]
